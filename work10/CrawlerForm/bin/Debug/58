<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="referrer" content="always" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>软件设计 - 网站分类 - 博客园</title>
    <link rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    <link rel="Stylesheet" type="text/css" href="/css/aggsite.min.css?v=XVK9pBwACFM32BSjHQ3T_N9NQGXjkUDwYVLWn2h19Dg" />
        <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://feed.cnblogs.com/blog/sitecateogry/108701/rss" />
    <script src="//common.cnblogs.com/script/jquery.js" type="text/javascript"></script>
    <script src="/js/aggsite.min.js?v=SMfb3cvJ_BVQu17ffdyLH0AsFTOFX87b871AzEvWXNo"></script>
    <script async='async' src='https://www.googletagservices.com/tag/js/gpt.js'></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot('/1090369/A1', [468, 60], 'div-gpt-ad-1547816814884-0').addService(googletag.pubads());
            googletag.defineSlot('/1090369/B1', [300, 250], 'div-gpt-ad-1546331539224-0').addService(googletag.pubads());
            googletag.defineSlot('/1090369/B2', [300, 250], 'div-gpt-ad-1539007469525-0').addService(googletag.pubads());
            googletag.defineSlot('/1090369/B3', [300, 250], 'div-gpt-ad-1546331252242-0').addService(googletag.pubads());
            googletag.defineSlot('/1090369/B4', [300, 250], 'div-gpt-ad-1546331385104-0').addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });

        /**/</script>
</head>
<body>
    <div id="wrapper">
        <div id="hd_info">
            <div id="cnts">
                <div id="site_nav_top">代码改变世界</div>
                <div id="login_area"><span id="span_userinfo"></span></div>
                <div class="clear"></div>
            </div>
        </div>
        <div id="header">
            <p class="h_r_3"></p><p class="h_r_2"></p><p class="h_r_1"></p>
            <div id="header_block">
                <div id="logo">
                    <h1>
                        <a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo_small.gif" alt="博客园Logo" width="142" height="55" /></a>
                    </h1>
                </div>

                <div class="clear"></div>
            </div>
            <p class="h_r_1"></p><p class="h_r_2"></p><p class="h_r_3"></p>
        </div>
        <div id="nav_menu"><a href="https://home.cnblogs.com/">园子</a><a href="https://news.cnblogs.com">新闻</a><a href="https://q.cnblogs.com/">博问</a><a href="https://ing.cnblogs.com/">闪存</a><a href="https://group.cnblogs.com/">小组</a><a href="https://wz.cnblogs.com/">收藏</a><a href="https://job.cnblogs.com/">招聘</a><a href="https://edu.cnblogs.com/">班级</a><a href="http://zzk.cnblogs.com/">找找看</a></div>
        <div id="main">
            <div class="post_nav_block_wrapper">
                <ul class="post_nav_block">
                        <li><a href="/" id="tabnav_" class="" title="">首页</a></li>
                        <li><a href="/cate/108701/" id="tabnav_cate108701" class="current_nav" title="">软件设计</a></li>
                </ul>
                <div class="clear"></div>
            </div>
            <div class="rss_link" id="rss_block">
<span id="posts_refresh_tips"></span><a id="posts_refresh" href="#" class="refresh" title="刷新博文列表" onclick="aggSite.loadCategoryPostList();return false">刷新</a><a href="http://feed.cnblogs.com/blog/sitecateogry/108701/rss"><img src="//common.cnblogs.com/images/icon_rss.gif" alt="点击订阅" style="position:relative;top:2px;" title="订阅博客园文章" /></a>            </div>
                <div id="headline_block" class="headline"><ul><li class="editor_pick"><a href="https://www.cnblogs.com/coco1s/p/12980682.html" id="editor_pick_lnk" target="_blank">【编辑推荐】巧用 display: contents 增强页面语义<span id="editor_pick_count"></span></a> <a href="/aggsite/headline" title="查看更多编辑推荐" class="right_more">»</a></li><li><a href="https://www.cnblogs.com/c7jie/p/12986598.html" target="_blank" title="阅读640, 评论9, 推荐17">[最多推荐]C# 数据操作系列 - 19 FreeSql 入坑介绍(9/640)</a> <a href="/aggsite/topdigged24h" title="查看24小时推荐排行" class="right_more">»</a></li><li><a href="https://news.cnblogs.com/n/663027/" target="_blank" title="阅读398, 评论0, 推荐2">[新闻头条]专为「神盾局」打造的软体机器人：通用电气出品，能挖隧道，可军用(0/398)</a> <a href="https://news.cnblogs.com/" title="查看更多新闻" class="right_more">»</a></li><li><a href="https://news.cnblogs.com/n/662991/" target="_blank" title="阅读1463, 评论1, 推荐7">[推荐新闻]基础软件+开源，为什么是现在？(1/1463)</a> <a href="https://news.cnblogs.com/n/recommend" title="查看更多推荐新闻" class="right_more">»</a></li></ul></div>

            <div id="pager_top" style="display:none"></div>
            <div id="post_list_tips" class="hide"></div>
            
            <div id="post_list">
                <div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('yslss',12990783,590895,1)"> 
	<span class="diggnum" id="digg_count_12990783">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12990783" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/yslss/archive/2020/05/30/12990783.html" target="_blank">单例模式，反射破环？</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/yslss/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1869289/20200529103454.png" alt=""/></a>    饿汉式 // 饿汉式单例 public class Hungry { //构造器私有 private Hungry(){ } // 一上来就把这个类加载了 private final static Hungry HUNGRY = new Hungry(); public static Hungry  ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/yslss/" class="lightblue">一条有梦想的咸鱼。</a> 
    发布于 2020-05-30 08:57 
    <span class="article_comment"><a href="https://www.cnblogs.com/yslss/archive/2020/05/30/12990783.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/yslss/archive/2020/05/30/12990783.html" class="gray">阅读(64)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('Canaban',12987668,364422,1)"> 
	<span class="diggnum" id="digg_count_12987668">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12987668" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/Canaban/archive/2020/05/29/12987668.html" target="_blank">单例模式（Singleton Pattern）</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/Canaban/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1191830/20170702105441.png" alt=""/></a>    Singleton Pattern 属于创造型设计模式，提供一种创建对象的方法，涉及一个单一类的实例，确保一个类只创建一个对象，提供访问唯一对象的方法，可以直接访问，不需要创建。 单一类只有一个实例 类必须自己创建自己的实例 给其他调用对象提供访问该类实例的方法 目的：一个类只创建一个实例 优点：减 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/Canaban/" class="lightblue">Canaban</a> 
    发布于 2020-05-29 15:28 
    <span class="article_comment"><a href="https://www.cnblogs.com/Canaban/archive/2020/05/29/12987668.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/Canaban/archive/2020/05/29/12987668.html" class="gray">阅读(5)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('skychx',12985423,556311,1)"> 
	<span class="diggnum" id="digg_count_12985423">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12985423" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/skychx/archive/2020/05/29/X-Forwarded-For-get-real-IP.html" target="_blank">你确信 X-Forwarded-For 拿到的就是用户真实 IP 吗？</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/skychx/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1850928/20191028222934.png" alt=""/></a>    如何通过 X-Forwarded-For 拿到用户真实 IP ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/skychx/" class="lightblue">卤蛋实验室</a> 
    发布于 2020-05-29 08:54 
    <span class="article_comment"><a href="https://www.cnblogs.com/skychx/archive/2020/05/29/X-Forwarded-For-get-real-IP.html#commentform" title="2020-05-29 12:53" class="gray">
        评论(3)</a></span><span class="article_view"><a href="https://www.cnblogs.com/skychx/archive/2020/05/29/X-Forwarded-For-get-real-IP.html" class="gray">阅读(338)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('skychx',12980647,556311,1)"> 
	<span class="diggnum" id="digg_count_12980647">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12980647" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/skychx/archive/2020/05/28/HTTP-space-to-20-or-plus.html" target="_blank">HTTP GET/POST 请求时，空格应该编码为 %20 还是 +？</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/skychx/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1850928/20191028222934.png" alt=""/></a>    URI 规范和 W3C 规范冲突了，才会搞出这种让人疑惑的乌龙事件 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/skychx/" class="lightblue">卤蛋实验室</a> 
    发布于 2020-05-28 14:29 
    <span class="article_comment"><a href="https://www.cnblogs.com/skychx/archive/2020/05/28/HTTP-space-to-20-or-plus.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/skychx/archive/2020/05/28/HTTP-space-to-20-or-plus.html" class="gray">阅读(40)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('Yee-Q',12979569,574308,1)"> 
	<span class="diggnum" id="digg_count_12979569">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12979569" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/Yee-Q/archive/2020/05/28/12979569.html" target="_blank">软件设计模式学习（二十二）备忘录模式</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/Yee-Q/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1759254/20200523204128.png" alt=""/></a>    备忘录模式提供了一种对象状态的撤销实现机制，当系统中某一对象需要恢复到某一历史状态时可以使用备忘录模式来进行设计 模式动机 人人都有后悔的时候，在软件使用过程中难免会出现一些误操作，如不小心删除了某些文字或图片，数据填入错误等，对于这些误操作，需要提供一种后悔药机制，让系统可以回到误操作前的状态，这 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/Yee-Q/" class="lightblue">低吟不作语</a> 
    发布于 2020-05-28 11:39 
    <span class="article_comment"><a href="https://www.cnblogs.com/Yee-Q/archive/2020/05/28/12979569.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/Yee-Q/archive/2020/05/28/12979569.html" class="gray">阅读(146)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('dayao666',12978578,565114,1)"> 
	<span class="diggnum" id="digg_count_12978578">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12978578" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/dayao666/archive/2020/05/28/12978578.html" target="_blank">SpringCloud学习笔记（开篇）</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/dayao666/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1886473/20191201170029.png" alt=""/></a>    一、前言 之前项目里面都是基于Springboot +vue 开发，接下里公司准备做一个物联网平台和企业信息化系统，还是几年前使用过springcloud的我决定系统的总结springcloud中各个组件，供自己学习以及各位博友讨论。在此过程中涉及到的架构代码都将在码云或者 github 共享出来， ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/dayao666/" class="lightblue">大姚666</a> 
    发布于 2020-05-28 09:57 
    <span class="article_comment"><a href="https://www.cnblogs.com/dayao666/archive/2020/05/28/12978578.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/dayao666/archive/2020/05/28/12978578.html" class="gray">阅读(25)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('Yee-Q',12972120,574308,1)"> 
	<span class="diggnum" id="digg_count_12972120">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12972120" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/Yee-Q/archive/2020/05/27/12972120.html" target="_blank">软件设计模式学习（二十一）中介者模式</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/Yee-Q/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1759254/20200523204128.png" alt=""/></a>    对于那些存在对象之间复杂交互关系的系统，中介者模式提供了一种简化复杂交互的解决方案，即通过引入一个中介者，将原本对象之间的两两交互转化为每个对象与中介者之间的交互 模式动机 以微信聊天为例，可以用户与用户直接聊天，也可以通过微信群聊天。前者的话，用户要和别的用户加为好友，即用户和用户之间存在多对多关 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/Yee-Q/" class="lightblue">低吟不作语</a> 
    发布于 2020-05-27 12:51 
    <span class="article_comment"><a href="https://www.cnblogs.com/Yee-Q/archive/2020/05/27/12972120.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/Yee-Q/archive/2020/05/27/12972120.html" class="gray">阅读(206)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('loushengjie',12966284,452151,1)"> 
	<span class="diggnum" id="digg_count_12966284">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12966284" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/loushengjie/archive/2020/05/27/12966284.html" target="_blank">设计模式之工厂模式</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/loushengjie/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1465512/20190809161646.png" alt=""/></a>    工厂模式 简单工厂模式，工厂方法模式、抽象工厂模式 简单工厂模式、工厂方法模式、抽象工厂模式，都是属于创建型设计模式。严格上来说，简单工厂模式不属于23设计模式之一，因为它违背了开闭原则。 这三种设计模式，名字都包含“工厂”二字，如果没有认真地对它们的设计思想、代码进行认真比较，还真的很难区分出究竟 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/loushengjie/" class="lightblue">聖潔</a> 
    发布于 2020-05-27 09:07 
    <span class="article_comment"><a href="https://www.cnblogs.com/loushengjie/archive/2020/05/27/12966284.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/loushengjie/archive/2020/05/27/12966284.html" class="gray">阅读(28)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('shiyanlou',12967293,208684,1)"> 
	<span class="diggnum" id="digg_count_12967293">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12967293" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/shiyanlou/archive/2020/05/26/12967293.html" target="_blank">设计模式：程序员跳不开的坑</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/shiyanlou/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/703874/20141215170409.png" alt=""/></a>    任何一个有趣、有用的程序、项目或者游戏，都需要坚实的基本功方能实现，设计模式就是我们必学的基本功。 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/shiyanlou/" class="lightblue">实验楼</a> 
    发布于 2020-05-26 18:31 
    <span class="article_comment"><a href="https://www.cnblogs.com/shiyanlou/archive/2020/05/26/12967293.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/shiyanlou/archive/2020/05/26/12967293.html" class="gray">阅读(37)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('loushengjie',12965684,452151,1)"> 
	<span class="diggnum" id="digg_count_12965684">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12965684" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/loushengjie/archive/2020/05/26/12965684.html" target="_blank">设计模式之单例模式</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/loushengjie/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1465512/20190809161646.png" alt=""/></a>    单例设计模式 懒汉式，饿汉式 单例设计模式是一种很常见的设计模式 单例设计模式的特点： 1.单例设计模式保证一个类只有一个实例。2.要提供一个访问该类对象实例的全局访问点。 单例设计模式要点 对一些类来说，只有一个实例是很重要的。例如很多时候对于某个系统只需要拥有一个全局对象，这样有利于我们协调系统 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/loushengjie/" class="lightblue">聖潔</a> 
    发布于 2020-05-26 15:01 
    <span class="article_comment"><a href="https://www.cnblogs.com/loushengjie/archive/2020/05/26/12965684.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/loushengjie/archive/2020/05/26/12965684.html" class="gray">阅读(21)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('harryzhou6',12964907,579083,1)"> 
	<span class="diggnum" id="digg_count_12964907">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12964907" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/harryzhou6/archive/2020/05/26/12964907.html" target="_blank">介绍一款 redis 可视化工具 - QuickRedis</a></h3>               	
    <p class="post_item_summary">
    QuickRedis 是一款 Redis 可视化管理工具。它支持直连、哨兵、集群，支持亿万数量级的key，还有令人兴奋的UI。 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/harryzhou6/" class="lightblue">harryzhou6</a> 
    发布于 2020-05-26 13:12 
    <span class="article_comment"><a href="https://www.cnblogs.com/harryzhou6/archive/2020/05/26/12964907.html#commentform" title="2020-05-27 10:33" class="gray">
        评论(2)</a></span><span class="article_view"><a href="https://www.cnblogs.com/harryzhou6/archive/2020/05/26/12964907.html" class="gray">阅读(161)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('m18249367934',12964023,435086,1)"> 
	<span class="diggnum" id="digg_count_12964023">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12964023" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/m18249367934/archive/2020/05/26/12964023.html" target="_blank">spring cloud springboot 框架源码 activiti工作流 前后分离 微服务分布式</a></h3>               	
    <p class="post_item_summary">
    1.代码生成器： [正反双向](单表、主表、明细表、树形表，快速开发利器)freemaker模版技术 ,0个代码不用写,生成完整的一个模块,带页面、建表sql脚本、处理类、service等完整模块2.多数据源：（支持同时连接无数个数据库，可以不同的模块连接不同数的据库）支持N个数据源3.阿里数据库连 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/m18249367934/" class="lightblue">m18249367934</a> 
    发布于 2020-05-26 10:39 
    <span class="article_comment"><a href="https://www.cnblogs.com/m18249367934/archive/2020/05/26/12964023.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/m18249367934/archive/2020/05/26/12964023.html" class="gray">阅读(41)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('qizhufeitian',12963562,564132,1)"> 
	<span class="diggnum" id="digg_count_12963562">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12963562" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/qizhufeitian/archive/2020/05/26/12963562.html" target="_blank">设计模式的分类</a></h3>               	
    <p class="post_item_summary">
    GoF 的 23 种设计模式有两种分类方法，即根据模式的目的来分和根据模式的作用的范围来分。 1. 根据目的来分 根据模式是用来完成什么工作来划分，这种方式可分为创建型模式、结构型模式和行为型模式这 3 种。 创建型模式：用于描述“怎样创建对象”，它的主要特点是“将对象的创建与使用分离”。提供了单例 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/qizhufeitian/" class="lightblue">骑猪飞天</a> 
    发布于 2020-05-26 09:38 
    <span class="article_comment"><a href="https://www.cnblogs.com/qizhufeitian/archive/2020/05/26/12963562.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/qizhufeitian/archive/2020/05/26/12963562.html" class="gray">阅读(22)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('Yee-Q',12957360,574308,1)"> 
	<span class="diggnum" id="digg_count_12957360">1</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12957360" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/Yee-Q/archive/2020/05/25/12957360.html" target="_blank">软件设计模式学习（二十）迭代器模式</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/Yee-Q/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1759254/20200523204128.png" alt=""/></a>    迭代器模式是一种使用频率非常高的设计模式，迭代器用于对一个聚合对象进行遍历。通过引入迭代器可以将数据的遍历功能从聚合对象中分离出来，聚合对象只负责存储数据，聚合对象只负责存储数据，而遍历数据由迭代器来完成。 模式动机 一个聚合对象，如一个列表（List）或者一个集合（Set）,应该提供一种方法来让别 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/Yee-Q/" class="lightblue">低吟不作语</a> 
    发布于 2020-05-25 15:57 
    <span class="article_comment"><a href="https://www.cnblogs.com/Yee-Q/archive/2020/05/25/12957360.html#commentform" title="2020-05-25 16:49" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/Yee-Q/archive/2020/05/25/12957360.html" class="gray">阅读(173)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('lixinjie',12043877,58412,1)"> 
	<span class="diggnum" id="digg_count_12043877">1</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12043877" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/lixinjie/archive/2020/05/25/a-post-about-designpattern-of-proxy.html" target="_blank">【设计模式】牛掰格拉斯的代理模式</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/lixinjie/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/76066/20190927225401.png" alt=""/></a>    代理的本质无论任何时候，只要谈到设计模式，大脑中一定要蹦出这四个字“活学活用”。要想对某个事物做到活学活用，必须要对它足够了解，甚至要剖析到本质才行。总是会有些人说，我干嘛要知道原理，干嘛要去看源码？会用就行了。对于这种情况，我只有五个字相送，“你开心就好”。不可否认，认识一个陌生事物，大部分情况还 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/lixinjie/" class="lightblue">编程新说(李新杰)</a> 
    发布于 2020-05-25 08:30 
    <span class="article_comment"><a href="https://www.cnblogs.com/lixinjie/archive/2020/05/25/a-post-about-designpattern-of-proxy.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/lixinjie/archive/2020/05/25/a-post-about-designpattern-of-proxy.html" class="gray">阅读(217)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('lixinjie',12043871,58412,1)"> 
	<span class="diggnum" id="digg_count_12043871">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12043871" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/lixinjie/archive/2020/05/24/a-post-about-designpattern-of-visitor.html" target="_blank">【设计模式】趣说访问者模式，颇有些无奈之举</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/lixinjie/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/76066/20190927225401.png" alt=""/></a>    老实说，在实际编程中，访问者设计模式应用的并不多，至少我是这样认为的，因为它的主要使用场景并不多。那么肯定会有人问，访问者模式的主要使用场景是什么呢？继续往下看便知。新闻联播看多了之后首先要说的是，设计模式中的“访问者”和现实生活中的“访问者”其本质是一回事。虽然设计模式中的不太熟悉，但现实生活中的 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/lixinjie/" class="lightblue">编程新说(李新杰)</a> 
    发布于 2020-05-24 09:25 
    <span class="article_comment"><a href="https://www.cnblogs.com/lixinjie/archive/2020/05/24/a-post-about-designpattern-of-visitor.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/lixinjie/archive/2020/05/24/a-post-about-designpattern-of-visitor.html" class="gray">阅读(148)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('anxin1225',12944001,162644,1)"> 
	<span class="diggnum" id="digg_count_12944001">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12944001" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/anxin1225/archive/2020/05/23/12944001.html" target="_blank">从零开始搭建一个PaaS平台 - 我们要做什么</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/anxin1225/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/385305/20130906164618.png" alt=""/></a>    前言 从最开始的小公司做小网站，到现在进入现在的公司做项目，发现小公司里很多很多工作都是重复的劳动（增删改查），不过想想也是，业务软件最基础的东西不就是增删改查吗。 但是很多时候，这种业务逻辑其实没有必要挨个重写。总不能说你的增删改查比我的高级很多。很大程度上，复杂的问题只是数据太多了怎么优化。 简 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/anxin1225/" class="lightblue">连程</a> 
    发布于 2020-05-23 20:32 
    <span class="article_comment"><a href="https://www.cnblogs.com/anxin1225/archive/2020/05/23/12944001.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/anxin1225/archive/2020/05/23/12944001.html" class="gray">阅读(106)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('Yee-Q',12944289,574308,1)"> 
	<span class="diggnum" id="digg_count_12944289">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12944289" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/Yee-Q/archive/2020/05/23/12944289.html" target="_blank">软件设计模式学习（十九）解释器模式</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/Yee-Q/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1759254/20200523204128.png" alt=""/></a>    解释器是一种不常使用的设计模式，它用于描述如何构成一个简单的语言解释器，主要应用于使用面向对象语言开发的编译器和解释器设计。当我们需要开发一个新的语言时，可以考虑使用解释器模式 模式动机 如果在系统中某一特定类型的问题发生的频率很高，此时可以考虑将这些问题的实例表述为一个语言中的句子。再构建一个解释 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/Yee-Q/" class="lightblue">低吟不作语</a> 
    发布于 2020-05-23 20:29 
    <span class="article_comment"><a href="https://www.cnblogs.com/Yee-Q/archive/2020/05/23/12944289.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/Yee-Q/archive/2020/05/23/12944289.html" class="gray">阅读(35)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('iff0',12938544,587612,1)"> 
	<span class="diggnum" id="digg_count_12938544">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12938544" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/iff0/archive/2020/05/22/12938544.html" target="_blank">BUAA_OO_第三单元</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/iff0/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/1961187/20200318190842.png" alt=""/></a>    一、JML初探 ​ 作为一种形式化语言，可以约束 代码中类和方法的状态和行为形成规格，通过将一系列具体代码实现抽象成明确的行为接口，可以形成一种契约式编程模式， 设计者无需考虑实际的数据结构与算法，可以聚焦于程序的整体逻辑， 形式化语言的无二义性能让实现者准确理解接口功能，根据问题需要选择合适的实现 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/iff0/" class="lightblue">iff0</a> 
    发布于 2020-05-22 17:34 
    <span class="article_comment"><a href="https://www.cnblogs.com/iff0/archive/2020/05/22/12938544.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/iff0/archive/2020/05/22/12938544.html" class="gray">阅读(31)</a></span></div>
</div>
<div class="clear"></div>
</div>
<div class="post_item">
<div class="digg">
    <div class="diggit" onclick="DiggPost('aohongzhu',12938733,605512,1)"> 
	<span class="diggnum" id="digg_count_12938733">0</span>
	</div>
	<div class="clear"></div>
    <div id="digg_tip_12938733" class="digg_tip">
        
    </div>
</div>      
<div class="post_item_body">
	<h3><a class="titlelnk" href="https://www.cnblogs.com/aohongzhu/archive/2020/05/22/12938733.html" target="_blank">每天学习一个设计模式（五）：结构型之门面模式</a></h3>               	
    <p class="post_item_summary">
<a href="https://www.cnblogs.com/aohongzhu/" target="_blank"><img width="48" height="48" class="pfs" src="https://pic.cnblogs.com/face/2044784/20200522103902.png" alt=""/></a>    一、基本概念 门面模式（外观模式）是对象的结构模式，外部与一个子系统的通信必须通过一个统一的门面对象进行。门面模式提供一个高层次的接口，使得子系统更易于使用。 二、通俗解释 FACADE门面模式：我有一个专业的Nikon相机，我就喜欢自己手动调光圈、快门，这样照出来的照片才专业，但MM可不懂这些，教 ...
    </p>
    <div class="post_item_foot">                    
    <a href="https://www.cnblogs.com/aohongzhu/" class="lightblue">${简简单单}</a> 
    发布于 2020-05-22 10:07 
    <span class="article_comment"><a href="https://www.cnblogs.com/aohongzhu/archive/2020/05/22/12938733.html#commentform" title="0001-01-01 08:05" class="gray">
        评论(0)</a></span><span class="article_view"><a href="https://www.cnblogs.com/aohongzhu/archive/2020/05/22/12938733.html" class="gray">阅读(13)</a></span></div>
</div>
<div class="clear"></div>
</div>
   

            </div>
            <script>editorPickStat(); aggSite.user.getUserInfo();</script>
            <script type="text/javascript">
                var aggSiteModel = {"CategoryType":"TopSiteCategory","ParentCategoryId":0,"CategoryId":108701,"PageIndex":1,"TotalPostCount":4000,"ItemListActionName":"AggSitePostList"};
            </script>
            <div id="pager_bottom"><div id="paging_block"><div class="pager"><a href="/cate/108701/" class="p_1 current" onclick="aggSite.loadCategoryPostList(1,20);buildPaging(1);return false;">1</a><a href="/cate/108701/2" class="p_2 middle" onclick="aggSite.loadCategoryPostList(2,20);buildPaging(2);return false;">2</a><a href="/cate/108701/3" class="p_3 middle" onclick="aggSite.loadCategoryPostList(3,20);buildPaging(3);return false;">3</a><a href="/cate/108701/4" class="p_4 middle" onclick="aggSite.loadCategoryPostList(4,20);buildPaging(4);return false;">4</a><a href="/cate/108701/5" class="p_5 middle" onclick="aggSite.loadCategoryPostList(5,20);buildPaging(5);return false;">5</a><a href="/cate/108701/6" class="p_6 middle" onclick="aggSite.loadCategoryPostList(6,20);buildPaging(6);return false;">6</a><a href="/cate/108701/7" class="p_7 middle" onclick="aggSite.loadCategoryPostList(7,20);buildPaging(7);return false;">7</a><a href="/cate/108701/8" class="p_8 middle" onclick="aggSite.loadCategoryPostList(8,20);buildPaging(8);return false;">8</a><a href="/cate/108701/9" class="p_9 middle" onclick="aggSite.loadCategoryPostList(9,20);buildPaging(9);return false;">9</a><a href="/cate/108701/10" class="p_10 middle" onclick="aggSite.loadCategoryPostList(10,20);buildPaging(10);return false;">10</a><a href="/cate/108701/11" class="p_11 middle" onclick="aggSite.loadCategoryPostList(11,20);buildPaging(11);return false;">11</a><span class="ellipsis">···</span><a href="/cate/108701/200" class="p_200 last" onclick="aggSite.loadCategoryPostList(200,20);buildPaging(200);return false;">200</a><a href="/cate/108701/2" onclick="aggSite.loadCategoryPostList(2,20);buildPaging(2);return false;">Next &gt;</a></div></div><script type="text/javascript">var pagingBuider={"OnlyLinkText":false,"TotalCount":4000,"PageIndex":1,"PageSize":20,"ShowPageCount":5,"SkipCount":0,"UrlFormat":"/cate/108701/{0}","OnClickJsFunc":"aggSite.loadCategoryPostList()","FirstPageLink":"/cate/108701/","AjaxUrl":"/AggSite/Pager","AjaxCallbak":null,"TopPagerId":"pager_top","IsRenderScript":true};function buildPaging(pageIndex){pagingBuider.PageIndex=pageIndex;$.ajax({url:pagingBuider.AjaxUrl,data:JSON.stringify(pagingBuider),type:'post',dataType:'text',contentType:'application/json; charset=utf-8',success:function (data) { $('#paging_block').html(data); var pagerTop=$('#pager_top');if(pageIndex>1){$(pagerTop).html(data).show();}else{$(pagerTop).hide();}}});}</script>
</div>
            <div id="side_nav">
                
    <div id="cate_title_block">
<div id="cate_title_title"><div class="cate_title">网站分类</div></div>
<ul id="cate_item">
<li id="cate_item_108698" onmouseover="cateShow(108698)" onmouseout="cateHidden(108698)">
<a href="/cate/108698/">.NET技术(2)</a>
</li>
<li id="cate_item_2" onmouseover="cateShow(2)" onmouseout="cateHidden(2)">
<a href="/cate/2/">编程语言(10)</a>
</li>
<li id="cate_item_108701" onmouseover="cateShow(108701)" onmouseout="cateHidden(108701)">
<a href="/cate/108701/">软件设计(1)</a>
</li>
<li id="cate_item_108703" onmouseover="cateShow(108703)" onmouseout="cateHidden(108703)">
<a href="/cate/108703/">Web前端(3)</a>
</li>
<li id="cate_item_108704" onmouseover="cateShow(108704)" onmouseout="cateHidden(108704)">
<a href="/cate/108704/">企业信息化(1)</a>
</li>
<li id="cate_item_108705" onmouseover="cateShow(108705)" onmouseout="cateHidden(108705)">
<a href="/cate/108705/">手机开发(0)</a>
</li>
<li id="cate_item_108709" onmouseover="cateShow(108709)" onmouseout="cateHidden(108709)">
<a href="/cate/108709/">软件工程(1)</a>
</li>
<li id="cate_item_108712" onmouseover="cateShow(108712)" onmouseout="cateHidden(108712)">
<a href="/cate/108712/">数据库技术(1)</a>
</li>
<li id="cate_item_108724" onmouseover="cateShow(108724)" onmouseout="cateHidden(108724)">
<a href="/cate/108724/">操作系统(1)</a>
</li>
<li id="cate_item_4" onmouseover="cateShow(4)" onmouseout="cateHidden(4)">
<a href="/cate/4/">其他分类(4)</a>
</li>
<li id="cate_item_0" onmouseover="cateShow(0)" onmouseout="cateHidden(0)">
<a href="/cate/all/">所有随笔(414)</a>
</li>
<li id="cate_item_-1" onmouseover="cateShow(-1)" onmouseout="cateHidden(-1)">
<a href="/comment/">所有评论(84)</a>
</li>
</ul>
<div class="cate_bottom"></div>
<div id="cate_sub_block"></div>
<script type="text/javascript">var cateIdList = '108698,2,108701,108703,108704,108705,108709,108712,108724,4';aggSite.loadSubCategories();</script>
</div>
        <div class="l_s"></div>
<p class="r_l_3" /><p class="r_l_2" /><p class="r_l_1" />
<div class="w_l">
<h4>相关分类</h4>
<ul>
<li><a href="/cate/108698/">.NET技术</a></li>
<li><a href="/cate/2/">编程语言</a></li>
<li><a href="/cate/108703/">Web前端</a></li>
<li><a href="/cate/108704/">企业信息化</a></li>
<li><a href="/cate/108705/">手机开发</a></li>
<li><a href="/cate/108709/">软件工程</a></li>
<li><a href="/cate/108712/">数据库技术</a></li>
<li><a href="/cate/108724/">操作系统</a></li>
<li><a href="/cate/4/">其他分类</a></li>
</ul>
</div>
<p class="r_l_1" /><p class="r_l_2" /><p class="r_l_3" />
<div class="l_s"></div>
<p class="r_l_3"></p><p class="r_l_2"></p><p class="r_l_1"></p>
<div class="w_l">
<h4>链接</h4>        
<ul>
    <li><a href="https://group.cnblogs.com/forum/public/" target="_blank">反馈或建议</a></li> 
    <li><a href="//www.cnblogs.com/cmt/" target="_blank">官方博客</a></li>
    <li><a href="/skins.aspx" target="_blank">博客模板</a></li>
    <li><a href="http://www.blogjava.net/">Java博客</a></li>
    <li><a href="http://www.cppblog.com/">C++博客</a></li>
    <li><a href="//www.cnblogs.com/cmt/archive/2009/09/26/1574616.html">手机版</a></li>
</ul>
</div>
<p class="r_l_1"></p><p class="r_l_2"></p><p class="r_l_3"></p>
<div class="l_s"></div>
<div id="user_stats"></div>
<div class="l_s"></div>        
<p class="r_l_3"></p><p class="r_l_2"></p><p class="r_l_1"></p>
<div class="w_l">                
<h4>统计信息</h4>
<div id="site_stats"></div>      
</div>
<p class="r_l_1"></p><p class="r_l_2"></p><p class="r_l_3"></p>
            </div>
            <div id="side_right">
                    <div id="search_block">
                        <div class="side_search">
                            <input type="text" id="zzk_q" class="search_input" onkeydown="return zzk_go_enter(event);" tabindex="3" /><input onclick="zzk_go()" type="button" class="search_btn" value="找找看" />
                        </div>
                        <div id="google_search" class="side_search">
                            <input type="text" id="google_search_q" class="search_input" onkeydown="return google_search_enter(event);" /><input type="button" value="Google" class="search_btn" onclick="return google_search();" />
                        </div>
                    </div>
                <div id="cnblogs_a1">
                    <div id='div-gpt-ad-1547816814884-0' style='height:60px; width:468px;'>
                        <script>
                            googletag.cmd.push(function () { googletag.display('div-gpt-ad-1547816814884-0'); });
                        </script>
                    </div>
                </div>
                <div id="cnblogs_b1" class="sidebar-image">
                    <div id='div-gpt-ad-1546331539224-0' style='height:250px; width:300px;'>
                        <script>
                            googletag.cmd.push(function () { googletag.display('div-gpt-ad-1546331539224-0'); });
                        </script>
                    </div>
                </div>
                <div id="ad_right_text" class="ad_right_text"></div>
                <div id="side_right_block"></div>
            </div>
        </div>
        <div id="footer_bottom">
            <div>Powered by .NET Core on Kubernetes</div>
            <div><a href="https://about.cnblogs.com/">关于博客园</a><a href="https://about.cnblogs.com/contact">联系我们</a><a href="https://about.cnblogs.com/ad">广告服务</a><a href="https://about.cnblogs.com/job">人才服务</a>&copy;2004-2020<a href="https://www.cnblogs.com/">博客园</a>保留所有权利<a href="http://www.beian.miit.gov.cn" target="_blank">沪ICP备09004260号</a></div>
            <div><a href="https://ss.knet.cn/verifyseal.dll?sn=e131108110100433392itm000000&amp;ct=df&amp;a=1&amp;pa=0.25787803245785335" rel="nofollow" target="_blank"><img id="cnnic_img" src="//common.cnblogs.com/images/cnnic.png" alt="" width="64" height="23" /></a><a target="_blank" href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=31011502001144" style="display:inline-block;text-decoration:none;height:20px;line-height:20px;"><img src="//common.cnblogs.com/images/ghs.png" alt="" /><span style="float:left;height:20px;line-height:20px;margin: 0 5px 0 5px; color:#939393;">沪公网安备 31011502001144号</span></a></div>
        </div>
    </div>
</body>
</html>
