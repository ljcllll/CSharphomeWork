<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>汐夜 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/coffee/bundle-coffee.min.css?v=KPz7rj-c2sTAV1_ck1aDmbZcuCG3KBhyLnfvzf6nn94" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/coffee/bundle-coffee-mobile.min.css?v=na9bpAY4yh7uEWCcrXj3vfJM3VBse8YtU6-5fUUQPz0" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/koshio0219/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/koshio0219/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/koshio0219/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=6bwfCY2e02dLOXNW99G2BHZkYFmw9QyYTWeJ-W-sudo"></script>
    <script>
        var currentBlogId = 523527;
        var currentBlogApp = 'koshio0219';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'coffee';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a href="https://www.cnblogs.com/koshio0219/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/koshio0219/">汐夜</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="navigator">
			
<ul id="navList">
	<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
	<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/koshio0219/">
首页</a>
</li>
	<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
	<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E6%B1%90%E5%A4%9C">
联系</a></li>
	<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
	<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/koshio0219/rss/">
订阅</a>
	
<a id="blog_nav_rss_image" href="https://www.cnblogs.com/koshio0219/rss/">
    <img src="/skins/coffee/images/xml.gif" alt="订阅" />
</a></li>
</ul>



			<div class="blogStats">
				
				<!--done-->
随笔- 
46&nbsp;
文章- 
0&nbsp;
评论- 
5&nbsp;



				
			</div><!--end: blogStats -->
		</div><!--end: navigator 博客导航栏 -->
		
<!--done-->




		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2019/07/21.html">2019年7月21日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/11222734.html">
[置顶]    安利我的小说~
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：某一天人类醒来，似乎做了一个很长很长的梦，梦中他们因为争夺星杯的力量而互相厮杀，你死我活；可是黎明的到来，他们发现，原来这都是一场梦啊，根本就没有星杯啊魔法之类的东西嘛，维系这个世界的力量叫做科学。那么，这不科学啊！这些魔法星杯星石之类的名词是哪来的呢？人们觉得十分奇怪，不过谁也不清楚这之中发生过什么，于是人们开始用传说来定义这些事件，也许在境界的彼方，在人们永远也无法知道的某处，正发生着如同传说中发生的事呢。            <a href="https://www.cnblogs.com/koshio0219/p/11222734.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-07-21 21:08
汐夜
<span class="post-view-count">阅读(68)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11222734" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2019/07/18.html">2019年7月18日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/11209191.html">
[置顶]    游戏设计模式——Unity事件队列（纪念京阿尼事件）
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：今天京阿尼被烧了，吾等岂能坐视不管，于是发了此篇博客...希望京阿尼能够再站起来~            <a href="https://www.cnblogs.com/koshio0219/p/11209191.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-07-18 20:41
汐夜
<span class="post-view-count">阅读(414)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11209191" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/05/29.html">2020年5月29日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12988884.html">
    Unity 离线建造系统
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：很多游戏，特别是养成类手游，都会有自己独特的建造系统，一个建造装置的状态循环或者说生命周期一般是这样的： 1.准备建造，设置各项资源的投入等 2.等待一段倒计时，正在建造中 3.建造结束，选择是否收取资源 大体上，可以将建造盒子分为以下三种状态，每一个状态的逻辑和显示的页面不同： 1 public             <a href="https://www.cnblogs.com/koshio0219/p/12988884.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-29 18:04
汐夜
<span class="post-view-count">阅读(132)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(1)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12988884" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/05/21.html">2020年5月21日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12931296.html">
    Unity 任意区域截屏创建Sprite
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Unity截取全屏静帧的方法较为简单这里不作讨论，指定区域截图用到的最主要的方法就是读取屏幕像素： 1 // 2 // 摘要: 3 // Read pixels from screen into the saved texture data. 4 // 5 // 参数: 6 // source: 7            <a href="https://www.cnblogs.com/koshio0219/p/12931296.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-21 15:55
汐夜
<span class="post-view-count">阅读(42)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12931296" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/05/11.html">2020年5月11日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12868288.html">
    Unity ugui拖动控件（地图模式与物件模式）
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：拖动在游戏中使用频繁，例如将装备拖动到指定的快捷栏，或者大地图中拖动以查看局部信息等。 Unity的EventSystems中可以直接继承几个接口来实现拖动功能，如下： namespace UnityEngine.EventSystems { public interface IBeginDragH            <a href="https://www.cnblogs.com/koshio0219/p/12868288.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-11 18:57
汐夜
<span class="post-view-count">阅读(58)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12868288" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/04/30.html">2020年4月30日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12808063.html">
    Unity 极简UI框架
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：写ui的时候一般追求控制逻辑和显示逻辑分离，经典的类似于MVC，其余大多都是这个模式的衍生，实际上书写的时候M是在整个游戏的底层，我更倾向于将它称之为D（Data）而不是M（Model），而C（Ctrl）负责接收用户的各类UI事件，例如点击，滑动，还有其他游戏逻辑板块发过来的事件或消息，处理这些消息            <a href="https://www.cnblogs.com/koshio0219/p/12808063.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-30 15:58
汐夜
<span class="post-view-count">阅读(140)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12808063" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/04/28.html">2020年4月28日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12795542.html">
    Unity 芯片拼图算法
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：很多游戏的养成系统中会有利用芯片或者碎片来合成特定道具的功能，或者来给玩家以额外的属性提升等，先截个图以便更好说明： 如上图，我们有各种各样形状迥异的碎片，上面只不过列举了其中一部分，现在，我们需要利用这些碎片非常恰好和完整的将左边这个棋盘格填满；当然了，这里并不是要让计算机来计算所有的填充办法，也            <a href="https://www.cnblogs.com/koshio0219/p/12795542.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-28 17:16
汐夜
<span class="post-view-count">阅读(156)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(1)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12795542" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/04/27.html">2020年4月27日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12785868.html">
    Unity Procedural Level Generator 基础总结与功能优化
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Procedural Level Generator是在Unity应用商店中发布的一款免费的轻量级关卡生成器： 可以直接搜索关键字在应用商店中查找并下载。 和我之前生成关卡的想法不同，这个插件生成地图的方式类似于拼积木，它将每一个地图分为一个一个的部分，无论是房间还是通道，都叫做Section，只是            <a href="https://www.cnblogs.com/koshio0219/p/12785868.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-27 19:14
汐夜
<span class="post-view-count">阅读(115)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12785868" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/04/21.html">2020年4月21日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12746618.html">
    Unity 小地图制作
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：小地图是游戏中极度常用的组件，在Unity中，实现方式非常简单。 主要利用的原理是将一个单独摄像机的当前拍摄画面实时保存到一张渲染纹理图中，同时将这张纹理图更新显示到ugui中。 得知这一点后，先创建一张用于显示小地图内容的纹理图Render Texture，可以直接在资源文件列表中创建： 在信息面            <a href="https://www.cnblogs.com/koshio0219/p/12746618.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-21 18:34
汐夜
<span class="post-view-count">阅读(89)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12746618" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/04/20.html">2020年4月20日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12739913.html">
    Unity 随机地图房间通道生成
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：之前的博客中已经说了随机房间生成： https://www.cnblogs.com/koshio0219/p/12604383.html 但实现房间生成只是整个地图生成最初最简单的一步。下面讨论如何随机生成连接房间的通道。 房间的通道一般要满足以下特性和特征： 1.保证所有随机生成的房间都可以通过通            <a href="https://www.cnblogs.com/koshio0219/p/12739913.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-20 19:40
汐夜
<span class="post-view-count">阅读(293)</span><text> </text>
<span class="post-comment-count">评论(1)</span><text> </text>
<span class="post-digg-count">推荐(2)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12739913" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/03/31.html">2020年3月31日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12604383.html">
    Unity 随机房间地图生成
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：无论是在迷宫还是类似于地牢的游戏地图中，利用程序来生成每次都不一样的地图是一件叫人兴奋不已的事。 这时我们需要解决两个非常重要的随机事件： 1.在一定范围内随机出各不相同但又不能互相重叠的房间 2.优美生成连接这些房间的通道 基本的UML思路图： 这次我们先讨论如何快速生成符合各种随机要求的房间。             <a href="https://www.cnblogs.com/koshio0219/p/12604383.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-03-31 12:39
汐夜
<span class="post-view-count">阅读(208)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12604383" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/koshio0219/archive/2020/03/18.html">2020年3月18日</a>
    </div>


        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/koshio0219/p/12514825.html">
    Unity 随机数与随机种子
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：随机数几乎应用于游戏开发的方方面面，例如，随机生成的地图，迷宫，怪物属性等，在Unity中，使用随机数非常方便： 1 // 2 // 摘要: 3 // Return a random integer number between min [inclusive] and max [exclusive]            <a href="https://www.cnblogs.com/koshio0219/p/12514825.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-03-18 00:20
汐夜
<span class="post-view-count">阅读(439)</span><text> </text>
<span class="post-comment-count">评论(2)</span><text> </text>
<span class="post-digg-count">推荐(1)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12514825" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>

</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/koshio0219/default.html?page=2">
        下一页
    </a>

    </div>    
</div>








	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="calendar"><div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script></div>
			
			<DIV id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</DIV>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 汐夜
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>
