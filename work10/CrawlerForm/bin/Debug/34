<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="0. 前言 这是一个新的系列，名字是《ASP.NET Core 入门到实战》。这个系列主讲ASP.NET Core MVC，辅助一些前端的基础知识（能用来实现我们需要的即可，并非主讲）。同时这个系列也" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>【asp.net core 系列】 1  带你了解一下asp.net core - 月影西下 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/coffee/bundle-coffee.min.css?v=KPz7rj-c2sTAV1_ck1aDmbZcuCG3KBhyLnfvzf6nn94" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/coffee/bundle-coffee-mobile.min.css?v=na9bpAY4yh7uEWCcrXj3vfJM3VBse8YtU6-5fUUQPz0" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/c7jie/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/c7jie/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/c7jie/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=6bwfCY2e02dLOXNW99G2BHZkYFmw9QyYTWeJ-W-sudo"></script>
    <script>
        var currentBlogId = 572560;
        var currentBlogApp = 'c7jie';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'coffee';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a href="https://www.cnblogs.com/c7jie/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/c7jie/">月影西下</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="navigator">
			
<ul id="navList">
	<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
	<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/c7jie/">
首页</a>
</li>
	<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
	<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E6%9C%88%E5%BD%B1%E8%A5%BF%E4%B8%8B">
联系</a></li>
	<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
	<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/c7jie/rss/">
订阅</a>
	
<a id="blog_nav_rss_image" href="https://www.cnblogs.com/c7jie/rss/">
    <img src="/skins/coffee/images/xml.gif" alt="订阅" />
</a></li>
</ul>



			<div class="blogStats">
				
				<!--done-->
随笔- 
47&nbsp;
文章- 
0&nbsp;
评论- 
62&nbsp;



				
			</div><!--end: blogStats -->
		</div><!--end: navigator 博客导航栏 -->
		<div id="post_detail">
<!--done-->
<div id="topics">
	<div class="post">
		<h1 class = "postTitle">
			
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/c7jie/p/12989958.html">【asp.net core 系列】 1  带你了解一下asp.net core</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <h1 id="0-前言">0. 前言</h1>
<p>这是一个新的系列，名字是《ASP.NET Core 入门到实战》。这个系列主讲ASP.NET Core MVC，辅助一些前端的基础知识（能用来实现我们需要的即可，并非主讲）。同时这个系列也会在后续介绍ASP.NET Core 平台的其它类型的项目，并带领大家以各个类型的项目为主要架构开发一个网站或者网络服务中心。</p>
<p>下图是官网关于Asp.net Core支持的项目的介绍</p>
<p><img src="https://img2020.cnblogs.com/other/1266612/202005/1266612-20200529223421124-1488151423.png" alt="image-20200528225514637"></p>
<h1 id="1-aspnet-core-介绍">1. ASP.NET Core 介绍</h1>
<p>这一节我将为大家介绍一下 asp.net core的发展历程。</p>
<p>最早，微软为了替代CGI脚本开发了asp应用。ASP 全程 Active Server Page，意思是活动的服务器网页。ASP是一种HTML+服务器代码的组合，其后缀是.asp 。</p>
<p>在2001年，微软宣布将asp迁移到.NET Framework上，形成了一种新的脚本语言——名为asp.net。在2002年发布第一版，名为ASP.NET 1.0，附属在.NET Framework 1.0 上。ASP.NET 不仅仅是asp + ，更是 asp + .net 。结合了.net之后的asp.net 更加强大。</p>
<p>在2008年之前的某一年，asp.net mvc 上线了。从此之后，asp.net 分为了两种技术：asp.net webform(也就是原有的asp.net)；asp.net mvc。MVC极大的减少了在前台页面中设置大量的服务器脚本，同时MVC更贴近与HTML语言，使得程序开发工程师和前端能更好的配合 。</p>
<p>在2016年，微软为了实现自己的跨平台战略，将.NET Framework提取出了.NET Core版本，同年发布1.0版本。与此同时发布了asp.net core RTM版，正式版发布于2017年。</p>
<p>从此.net core带着它的小伙伴 EF Core和ASP.NET Core一路高歌猛进，然后发展成了如今的现状。</p>
<p>当然，以上内容省略了大量的情节，有兴趣的小伙伴可以自行查阅相关资料。这里就不做过多的介绍了，因为篇幅太长了，而且也会偏离主线。</p>
<h2 id="11-为什么是-aspnet-core">1.1 为什么是 ASP.NET Core</h2>
<p>那么，为什么我们选择了ASP.NET Core呢？目前市面上还有很多行业系统和领域相关系统都使用着 ASP.NET Webform，市场占比依旧不小。但是我们要考虑一件事情，那就是先行者优势和弯道超车。</p>
<p>现在的情况是，老的技术市场已经站满了人，新的技术市场还空空如也（当然，在我发这篇文章的时候---2020-5-29---asp.net core已经不算新了）。如果想入场一个技术，那么最适合的就是学最新的。</p>
<p>再者，ASP.NET Core支持跨平台。最早.net是不支持跨平台的，后来是Mono 经过努力让.net 开始支持跨平台。后来微软提出了跨平台战略和物联网战略，才提出正式的跨平台实现。</p>
<p>那么，我想到这里理由还是比较充分了。</p>
<h2 id="12-为什么是mvc">1.2 为什么是MVC</h2>
<p>MVC也就是Model-View-Controller的简称，意思是模型-视图-控制器。它的通信流程是这样的：</p>
<ul>
<li>用户访问界面（View），提交请求（包括访问请求）</li>
<li>界面向控制器（Controller）转送用户的请求，并进行一定程度封装</li>
<li>控制器（Controller）处理并完成后，以Model的形式返回给View</li>
<li>View解析返回的Model，然后绘制界面展示给用户</li>
</ul>
<p>MVC降低了页面和控制器的耦合，简单的讲就是极大的减少了页面上的服务器脚本。另外，增强了页面复用。ASP.NET Core MVC 在这一方便进一步优化了，又减少了不符合HTML格式的标签。</p>
<p>当然，MVC还有更多的好处。不过，最主要的一点就是，MVC可以让你离那些大佬更近一步（意思就是能让你获得一个工作）。</p>
<h1 id="2-aspnet--core-入门">2. ASP.NET  Core 入门</h1>
<p>在上一节，我胡扯了一堆，说不定打消了很多人的兴趣，哈哈，开个玩笑。让我们正式开始来试试ASP.NET Core。</p>
<ol>
<li>
<p>先创建一个解决方案：</p>
<pre><code class="language-bash">dotnet new sln --name AspDemo
</code></pre>
</li>
<li>
<p>创建一个MVC项目然后加入到解决方案</p>
<pre><code class="language-bash">dotnet new mvc --name MvcWeb
dotnet sln add MvcWeb
</code></pre>
</li>
</ol>
<p>这时候，如果不出意外的话，你能在AspDemo目录下看到如下目录结构：</p>
<pre><code>├── AspCoreDemo.sln
└── MvcWeb
    ├── appsettings.Development.json
    ├── appsettings.json
    ├── Controllers
    │   └── HomeController.cs
    ├── Models
    │   └── ErrorViewModel.cs
    ├── MvcWeb.csproj
    ├── obj
    │   ├── MvcWeb.csproj.nuget.dgspec.json
    │   ├── MvcWeb.csproj.nuget.g.props
    │   ├── MvcWeb.csproj.nuget.g.targets
    │   ├── project.assets.json
    │   └── project.nuget.cache
    ├── Program.cs
    ├── Properties
    │   └── launchSettings.json
    ├── Startup.cs
    ├── Views
    │   ├── Home
    │   │   ├── Index.cshtml
    │   │   └── Privacy.cshtml
    │   ├── Shared
    │   │   ├── Error.cshtml
    │   │   ├── _Layout.cshtml
    │   │   └── _ValidationScriptsPartial.cshtml
    │   ├── _ViewImports.cshtml
    │   └── _ViewStart.cshtml
    └── wwwroot
        ├── css
        │   └── site.css
        ├── favicon.ico
        ├── js
        │   └── site.js
        └── lib
            ├── bootstrap
            │   ├── dist
            │   │   ├── css
            │   │   │   ├── bootstrap.css
            │   │   │   ├── bootstrap.css.map
            │   │   │   ├── bootstrap-grid.css
            │   │   │   ├── bootstrap-grid.css.map
            │   │   │   ├── bootstrap-grid.min.css
            │   │   │   ├── bootstrap-grid.min.css.map
            │   │   │   ├── bootstrap.min.css
            │   │   │   ├── bootstrap.min.css.map
            │   │   │   ├── bootstrap-reboot.css
            │   │   │   ├── bootstrap-reboot.css.map
            │   │   │   ├── bootstrap-reboot.min.css
            │   │   │   └── bootstrap-reboot.min.css.map
            │   │   └── js
            │   │       ├── bootstrap.bundle.js
            │   │       ├── bootstrap.bundle.js.map
            │   │       ├── bootstrap.bundle.min.js
            │   │       ├── bootstrap.bundle.min.js.map
            │   │       ├── bootstrap.js
            │   │       ├── bootstrap.js.map
            │   │       ├── bootstrap.min.js
            │   │       └── bootstrap.min.js.map
            │   └── LICENSE
            ├── jquery
            │   ├── dist
            │   │   ├── jquery.js
            │   │   ├── jquery.min.js
            │   │   └── jquery.min.map
            │   └── LICENSE.txt
            ├── jquery-validation
            │   ├── dist
            │   │   ├── additional-methods.js
            │   │   ├── additional-methods.min.js
            │   │   ├── jquery.validate.js
            │   │   └── jquery.validate.min.js
            │   └── LICENSE.md
            └── jquery-validation-unobtrusive
                ├── jquery.validate.unobtrusive.js
                ├── jquery.validate.unobtrusive.min.js
                └── LICENSE.txt
</code></pre>
<p>简单介绍一下MvcWeb项目中的几个目录：</p>
<ul>
<li>Controllers 里存放着控制器，负责处理视图回传的数据</li>
<li>Models 里存放着Model层代码，目录名称不强求，也不一定非要在这里</li>
<li>Views 存放着视图路径，这个是固定名称</li>
<li>wwwroot 用来存放一些js脚本和css样式表</li>
<li>obj 目录是编译生成的目录，暂时不用过多的关心。</li>
</ul>
<p>那么，接下来运行一下这个项目看看效果：</p>
<pre><code class="language-bash">cd MvcWeb
dotnet run
# 或者
dotnet run --porject MvcWeb
</code></pre>
<p>如果出现如下内容表示项目已经启动完成了：</p>
<p><img src="https://img2020.cnblogs.com/other/1266612/202005/1266612-20200529223421435-443669303.png" alt="image-20200529104450723"></p>
<p>然后在浏览器中输入：</p>
<pre><code>http://localhost:5000
</code></pre>
<p>然后就能看到如下内容：</p>
<p><img src="https://img2020.cnblogs.com/other/1266612/202005/1266612-20200529223421873-2098248564.png" alt="image-20200529104631103"></p>
<p>目前是一个空荡荡的项目，不要急，在这个系列之后的文章中我们会继续丰富这个项目，让它的内容更加丰富更加符合我们的需要。</p>
<h1 id="3-programcs">3. Program.cs</h1>
<p>有没有觉得这个名字很熟悉？没错，我们之前每次演示使用的都是控制台程序，就有一个Program.cs文件，里面有一个Main方法。我们知道，Main方法是一个程序的入口。之前的Asp.net项目并没有这个方法，是因为之前的项目都是依托在IIS上。而asp.net core脱离了IIS，使其可以直接运行，所以就有一个入口方法。</p>
<p>代码应当如下：</p>
<pre><code class="language-c#">public class Program
{
    public static void Main(string[] args)
    {
        CreateHostBuilder(args).Build().Run();
    }

    public static IHostBuilder CreateHostBuilder(string[] args) =&gt;
        Host.CreateDefaultBuilder(args)
        .ConfigureWebHostDefaults(webBuilder =&gt;
        {
            webBuilder.UseStartup&lt;Startup&gt;();
        });
}
</code></pre>
<h2 id="31-修改端口">3.1 修改端口</h2>
<p>在我们使用的时候，经常会出现端口被占用的情况，这时候就需要我们设置一下端口了。设置方法如下：</p>
<pre><code class="language-c#">webBuilder.UseUrls(&quot;http://*:5006&quot;);
</code></pre>
<p>然后重启项目，就可以发现端口已经发生改变。</p>
<h1 id="4--setupcs">4.  Setup.cs</h1>
<p>这个类用来配置服务和应用的请求管道。这是一个约定的名称。初始版本的类文件应该是这样的：</p>
<pre><code class="language-c#">public class Startup
{
    public Startup(IConfiguration configuration)
    {
        Configuration = configuration;
    }

    public IConfiguration Configuration { get; }

    // This method gets called by the runtime. Use this method to add services to the container.
    public void ConfigureServices(IServiceCollection services)
    {
        services.AddControllersWithViews();
    }

    // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
    {
        if (env.IsDevelopment())
        {
            app.UseDeveloperExceptionPage();
        }
        else
        {
            app.UseExceptionHandler(&quot;/Home/Error&quot;);
            // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
            app.UseHsts();
        }
        app.UseHttpsRedirection();
        app.UseStaticFiles();

        app.UseRouting();

        app.UseAuthorization();

        app.UseEndpoints(endpoints =&gt;
        {
            endpoints.MapControllerRoute(
                name: &quot;default&quot;,
                pattern: &quot;{controller=Home}/{action=Index}/{id?}&quot;);
        });
    }
}
</code></pre>
<h1 id="5-总结">5. 总结</h1>
<p>这一篇简单的带领大家一起看了下asp.net core MVC项目。可以说这是最能提现微软的约定优于配置这句话的项目。MVC项目配置、继承都很少。所有的方法和类都是通过约定好的名称和参数列表来区分。所以在开发MVC项目适合，发现效果和预期不太一致的时候，看一下是不是有拼写错误。</p>
<p>嗯，这一篇就到这了。《asp.net core 系列》期待你的关注，下一篇将介绍如何编写一个控制器并访问它。</p>
<blockquote>
<p>更多内容烦请关注<a href="https://www.attachie.club">我的博客《高先生小屋》</a></p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/other/1266612/202005/1266612-20200529223422439-633661153.png" alt="file"></p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
		</div>
		<div class="postDesc">posted @ 
<span id="post-date">2020-05-29 22:34</span>&nbsp;
<a href="https://www.cnblogs.com/c7jie/">月影西下</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12989958" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12989958);return false;">收藏</a></div>
	</div>
	
	
</div><!--end: topics 文章、评论容器-->
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 572560, cb_blogApp = 'c7jie', cb_blogUserGuid = 'f7f130fe-8c19-4f36-4637-08d4ef52ecb6';
    var cb_entryId = 12989958, cb_entryCreatedDate = '2020-05-29 22:34', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;"></div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div></div>


	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="calendar"><div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script></div>
			
			<DIV id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</DIV>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 月影西下
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>
