<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="本文示例代码、数据已上传至我的Github仓库https://github.com/CNFeffery/DataScienceStudyNotes 1 简介 Kepler.gl相信很多人都听说过，作为" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>（数据科学学习手札85）Python+Kepler.gl轻松制作酷炫路径动画 - 费弗里 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/custom/bundle-custom.min.css?v=1ssrnY3Il79Ok472qeVrpxlSprSXcHhYPgZC5S3wtVM" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/feffery/custom.css?v=lIMzqBk0DR0V9mKFkYoPtPjFMlY=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/custom/bundle-custom-mobile.min.css?v=-Yh290MhQyDeXLmvKTSses9H6-49lqbpXFh55zvS0w8" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/feffery/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/feffery/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/feffery/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=6bwfCY2e02dLOXNW99G2BHZkYFmw9QyYTWeJ-W-sudo"></script>
    <script>
        var currentBlogId = 415579;
        var currentBlogApp = 'feffery';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var skinName = 'Custom';
    </script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;v=20200504"></script>
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/feffery/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/feffery/">费弗里</a>
</h1>
<h2>
数据科学玩家
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/feffery/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E8%B4%B9%E5%BC%97%E9%87%8C">
联系</a></li>
<li>

<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
88&nbsp; </span>
<span id="stats_article_count">文章 - 
1&nbsp; </span>
<span id="stats-comment_count">评论 - 
73</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/feffery/p/12987968.html">（数据科学学习手札85）Python+Kepler.gl轻松制作酷炫路径动画</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <blockquote>
<p>本文示例代码、数据已上传至我的<code>Github</code>仓库<a href="https://github.com/CNFeffery/DataScienceStudyNotes">https://github.com/CNFeffery/DataScienceStudyNotes</a></p>
</blockquote>
<h1 id="1-简介">1 简介</h1>
<p>　　<code>Kepler.gl</code>相信很多人都听说过，作为<code>Uber</code>几年前开源的交互式地理信息可视化工具，<code>kepler.gl</code>依托<code>WebGL</code>强大的图形渲染能力，可以在浏览器端以多种形式轻松展示大规模数据集。</p>
<center><img src="https://img2020.cnblogs.com/blog/1344061/202005/1344061-20200530090831668-1245929242.png"></center><center><font size=2>图1</font></center>
<p>　　更令人兴奋地是<code>Kepler.gl</code>在去年推出了基于<code>Python</code>的接口库<code>keplergl</code>，结合<code>jupyter notebook/jupyter lab</code>的相关拓展插件，使得我们可以通过编写<code>Python</code>程序配合<code>Kepler.gl</code>更灵活地制作各种可视化作品。</p>
<center><img src="https://img2020.cnblogs.com/blog/1344061/202005/1344061-20200530090837092-282835482.png"></center><center><font size=2>图2</font></center>
<p>　　而随着近期<code>keplergl</code>的更新，更多的新特性得以同步到其<code>Python</code>生态中，本文就将针对其中的路径动画的制作方法进行介绍。</p>
<h1 id="2-基于keplergl的路径动画">2 基于keplergl的路径动画</h1>
<p>　　我们要制作的路径动画图主要用于表现特定路径上流的运动，譬如图3的例子来自<code>Kepler.gl</code>官方示例：</p>
<center><img src="https://img2020.cnblogs.com/blog/1344061/202005/1344061-20200530090858813-856921037.gif"></center><center><font size=2>图3</font></center>
<p>　　而在官方的说明中描述了要绘制路径动画需要输入的数据格式：</p>
<center><img src="https://img2020.cnblogs.com/blog/1344061/202005/1344061-20200530090924679-869825565.png"></center><center><font size=2>图4</font></center>
<p>　　这是一个典型的<code>GeoJSON</code>格式<code>LineString</code>要素，特别的是其<code>&quot;coordinates&quot;</code>键对应的值不同于常规的<code>[经度, 纬度]</code>格式，而是代表着<code>[经度, 纬度, 高度, 时间戳]</code>，其中高度非必要，可以设置为0，而时间戳则声明了轨迹动画在该时间点会到达的该点位置，即线要素上连续的点位置+时间戳定义了轨迹动画的运动模式，下面我们分步骤来实现。</p>
<h2 id="21-构造数据与初始化html">2.1 构造数据与初始化html</h2>
<p>　　这里我们以重庆市渝中区的OSM路网为演示示例数据，首先我们需要利用<code>json</code>模块来读取本地<code>重庆市渝中区_osm路网_道路.geojson</code>数据：</p>
<pre><code class="language-Python">from keplergl import KeplerGl
import json
import time

with open('geometry/重庆市渝中区_osm路网_道路.geojson') as g:
    raw_roads = json.load(g)
</code></pre>
<p>　　随便打印出其中包含的某个线要素：</p>
<center><img src="https://img2020.cnblogs.com/blog/1344061/202005/1344061-20200530090935858-601424757.png"></center><center><font size=2>图5</font></center>
<p>　　可以看到，这时线要素内部包含的点还是<code>[经度, 纬度]</code>的格式，接下来我们为其虚构上时间戳信息，为了保证整个路网可视化的协调一致，将所有线要素的时间跨度固定在一个小时之内，保证每段路上从头到尾的轨迹动画都保持一致：</p>
<pre><code class="language-Python">start_time = time.mktime(time.strptime('2020-05-29 20:00:00', &quot;%Y-%m-%d %H:%M:%S&quot;))

for i in range(raw_roads['features'].__len__()):
    for j in range(raw_roads['features'][i]['geometry']['coordinates'].__len__()):
        
        shift_time = int((j / raw_roads['features'][i]['geometry']['coordinates'].__len__())*3600) # 更新当前对应的时间戳
        
        raw_roads['features'][i]['geometry']['coordinates'][j] \
            .extend([0, # 高度设置为0
                     int(start_time) + shift_time])
</code></pre>
<p>　　接着再打印其中一个线要素：</p>
<center><img src="https://img2020.cnblogs.com/blog/1344061/202005/1344061-20200530090940653-316694180.png"></center><center><font size=2>图6</font></center>
<p>　　可以发现每个点元素都追加上高度0以及对应的时间戳（注意这里的时间戳必须为整数否则之后输入<code>keplergl</code>会报错），接下来的过程就非常简单，首先确保你已经安装了<code>keplergl</code>以及对应插件，譬如我所使用的<code>jupyter lab</code>，在确保<code>nodejs</code>被安装的前提下，使用<code>jupyter labextension install @jupyter-widgets/jupyterlab-manager keplergl-jupyter</code>安装拓展插件（jupyter notebook可参考https://github.com/keplergl/kepler.gl/tree/master/bindings/kepler.gl-jupyter#installation），以及使用<code>pip install keplergl</code>来安装<code>keplergl</code>库，一切准备就绪直接运行如下代码：</p>
<pre><code class="language-Python">from keplergl import KeplerGl
# 生成KeplerGl对象s
map1 = KeplerGl(height=400, 
                data={'flow': raw_roads}) # data以图层名为键，对应的矢量数据为值
map1
map1.save_to_html(file_name='渝中区.html') # 导出到本地可编辑html文件
</code></pre>
<center><img src="https://img2020.cnblogs.com/blog/1344061/202005/1344061-20200530090944598-2091003145.png"></center><center><font size=2>图7</font></center>
<p>　　这一步的目的是初始化已嵌入目标数据的html文件，接下来你就可以关闭<code>jupyter lab</code>，在工作目录下找到已经导出的html文件直接打开，接下来的工作将在浏览器里进行。</p>
<h2 id="22-交互式创作">2.2 交互式创作</h2>
<p>　　接下来的过程则不涉及任何代码，我们将以点击按钮的方式改变我们可视化作品的外观，由于整个过程细节较多，因此将整个过程录制为视频：</p>
<center><iframe frameborder="0" width="670px" height="442px" src="https://v.qq.com/txp/iframe/player.html?vid=m0974cnihng" allowFullScreen="true"></iframe></center>
<p>　　<code>Kepler.gl</code>中的交互式参数调整非常简单，只要你随便试一试就可以掌握其用法，不必拘泥于我上面的参数设置，发挥自己的创意，调出更美观的轨迹动画结果。</p>
<p>　　以上就是本文的全部内容，如有疑问或建议欢迎到评论区与我交流~</p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-05-30 09:19</span>&nbsp;
<a href="https://www.cnblogs.com/feffery/">费弗里</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12987968" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12987968);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 415579, cb_blogApp = 'feffery', cb_blogUserGuid = '5b54873d-bba1-493e-a2a0-08d5782f1af4';
    var cb_entryId = 12987968, cb_entryCreatedDate = '2020-05-30 09:19', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;"></div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 费弗里
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <script id="c_n_script" src="https://blog-static.cnblogs.com/files/feffery/js.js" color="190,190,190" opacity="1" count="50" zindex="-2">
if(/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {

} else {

}
</script>
    </div>
</body>
</html>
