<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>一线码农 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/imetro_hd/bundle-imetro_hd.min.css?v=gS0FloTY-RBJQcN3GCAKG6fAr6HHKtDMTw60VxjN79c" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/huangxincheng/custom.css?v=z0WD6a4nBgoSBHjlq93cyLFnQd8=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/imetro_hd/bundle-imetro_hd-mobile.min.css?v=VacchHeVg6bp3gCO8NqMH8D8fhA8iyRbb0JgoDUvn4o" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/huangxincheng/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/huangxincheng/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/huangxincheng/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=6bwfCY2e02dLOXNW99G2BHZkYFmw9QyYTWeJ-W-sudo"></script>
    <script>
        var currentBlogId = 85195;
        var currentBlogApp = 'huangxincheng';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'iMetro_HD';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/huangxincheng/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/huangxincheng/"></a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/huangxincheng/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E4%B8%80%E7%BA%BF%E7%A0%81%E5%86%9C">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/huangxincheng/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
304&nbsp; </span>
<span id="stats_article_count">文章 - 
1&nbsp; </span>
<span id="stats-comment_count">评论 - 
5197</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<!--done-->




		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/29.html">2020年5月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12985351.html">
    使用PInvoke互操作，让C#和C++愉快的交互优势互补
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 如果你常翻看FCL的源码，你会发现这里面有不少方法借助了C/C++的力量让C#更快更强悍,如下所示： [DllImport(&amp;quot;QCall&amp;quot;, CharSet = CharSet.Unicode)] [SecurityCritical] [SuppressUnmanagedCo            <a href="https://www.cnblogs.com/huangxincheng/p/12985351.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-29 08:21
一线码农
<span class="post-view-count">阅读(1312)</span><text> </text>
<span class="post-comment-count">评论(19)</span><text> </text>
<span class="post-digg-count">推荐(26)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12985351" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/26.html">2020年5月26日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12966717.html">
    阿里短信回执.net sdk的bug导致生产服务cpu 100%排查
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 去年阿里聚石塔上的所有isv短信通道全部对接阿里通信，我们就做了对接改造，使用阿里提供的.net sdk。 网址：https://help.aliyun.com/document_detail/114480.html 同事当时使用的是ons-.net v1.1.3版本，程序上            <a href="https://www.cnblogs.com/huangxincheng/p/12966717.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-26 17:07
一线码农
<span class="post-view-count">阅读(2270)</span><text> </text>
<span class="post-comment-count">评论(26)</span><text> </text>
<span class="post-digg-count">推荐(23)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12966717" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/25.html">2020年5月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12954569.html">
    List的扩容机制，你真的明白吗？
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 在前一篇大内存排查中，我们看到了Dictionary正在做扩容操作，当时这个字典的count=251w，你把字典玩的66飞起，其实都是底层为你负重前行，比如其中的扩容机制，当你遇到几百万甚至千万的大集合这个扩容机制还真的需要挖一下，免的入戏太深，难以自拔。 为了方便讲述，我准            <a href="https://www.cnblogs.com/huangxincheng/p/12954569.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-25 07:56
一线码农
<span class="post-view-count">阅读(872)</span><text> </text>
<span class="post-comment-count">评论(13)</span><text> </text>
<span class="post-digg-count">推荐(16)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12954569" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/22.html">2020年5月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12934975.html">
    BitArray虽好，但请不要滥用，又一次线上内存暴增排查
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 前天写了一篇大内存排查在园子里挺火，这是做自媒体最开心的事拉，干脆再来一篇满足大家胃口，上个月我写了一篇博客提到过使用 对原来的 进行高强度压缩，将原来的List内存压缩了将近106倍，但是bitmap不是一味的好，你必须在正确的场景中使用，而不是闭着眼睛滥用，bitmap在            <a href="https://www.cnblogs.com/huangxincheng/p/12934975.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-22 07:53
一线码农
<span class="post-view-count">阅读(1704)</span><text> </text>
<span class="post-comment-count">评论(14)</span><text> </text>
<span class="post-digg-count">推荐(12)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12934975" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/20.html">2020年5月20日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12925232.html">
    记一次排查线上程序内存的忽高忽低，又是大集合惹祸了
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 昨天继续还技术债，优化一轮后的程序拉到线上后内存继续忽高忽低，低的时候20G，高的时候30G，过了一会又下降了几个G，毫无疑问，程序中有什么集合或者什么操作占用了大量内存，所以准备在28，29G的时候抓dump分析分析。 二：解决思路 从快照中找问题就像看病一样，根据病象推测            <a href="https://www.cnblogs.com/huangxincheng/p/12925232.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-20 18:17
一线码农
<span class="post-view-count">阅读(2704)</span><text> </text>
<span class="post-comment-count">评论(30)</span><text> </text>
<span class="post-digg-count">推荐(52)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12925232" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/16.html">2020年5月16日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12898905.html">
    追了多年的开发框架，你还认识指针吗？
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 高级语言玩多了，可能很多人对指针或者汇编都淡忘了，本篇就和大家聊一聊指针，虽然C 中是不提倡使用的，但你能说指针在C 中不重要吗？你要知道FCL内库中大量的使用指针，如 等等数不胜数，如例代码： 对，你觉得的美好世界，其实都是别人帮你负重前行，退一步说，指针的理解和不理解，对            <a href="https://www.cnblogs.com/huangxincheng/p/12898905.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-16 09:54
一线码农
<span class="post-view-count">阅读(695)</span><text> </text>
<span class="post-comment-count">评论(7)</span><text> </text>
<span class="post-digg-count">推荐(4)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12898905" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/14.html">2020年5月14日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12886279.html">
    还不明白可空类型原理？ 我可要挖到底了
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 下决心做好自媒体到现在有一个月了，关注我的兄弟应该知道我产出了不少文章，号里的粉丝也多起来了，我也尽最大努力做到有问必回，现在是基础的、高深的问题都接踵而来，可我也只是一只小菜鸟，想飞也飞不动了(┬＿┬)，昨天号里有位朋友被面试官问到可空类型的原理，回答的不好，面试官也是，面            <a href="https://www.cnblogs.com/huangxincheng/p/12886279.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-14 08:44
一线码农
<span class="post-view-count">阅读(725)</span><text> </text>
<span class="post-comment-count">评论(10)</span><text> </text>
<span class="post-digg-count">推荐(12)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12886279" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/11.html">2020年5月11日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12866824.html">
    不要把异常当做业务逻辑，这性能可能你无法承受
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 在项目中摸爬滚打几年，应该或多或少的见过有人把异常当做业务逻辑处理的情况(┬＿┬)，比如说判断一个数字是否为整数,就想当然的用 包起来，再进行 ，如果抛异常就说明不是整数，简单粗暴，也不需要写正则或者其他逻辑，再比如一个字符串强制转化为Enum，直接用 ，可能是因为对异常的开            <a href="https://www.cnblogs.com/huangxincheng/p/12866824.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-11 07:30
一线码农
<span class="post-view-count">阅读(6092)</span><text> </text>
<span class="post-comment-count">评论(54)</span><text> </text>
<span class="post-digg-count">推荐(58)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12866824" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/08.html">2020年5月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12853849.html">
    教你配置windows上的windbg,linux上的lldb，打入clr内部这一篇就够了
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 前几天公众号里有位兄弟看了几篇文章之后，也准备用windbg试试看，结果这一配就花了好几天，(づ╥﹏╥)づ，我想也有很多跃跃欲试的朋友在配置的时候肯定会遇到这样和那样的问题，所以我觉得有必要整理一下，让大家少走弯路。 二：一些基础概念 1. 在哪下载 现在安装windbg越来            <a href="https://www.cnblogs.com/huangxincheng/p/12853849.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-08 23:43
一线码农
<span class="post-view-count">阅读(1768)</span><text> </text>
<span class="post-comment-count">评论(21)</span><text> </text>
<span class="post-digg-count">推荐(44)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12853849" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/06.html">2020年5月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12839160.html">
    内存迟迟下不去，可能你就差一个GC.Collect
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一：背景 1. 讲故事 我们有一家top级的淘品牌店铺，为了后续的加速计算，在程序启动的时候灌入她家的核心数据到内存中，灌入完成后内存高达100G，虽然云上的机器内存有256G，然被这么划掉一半看着还是有一点心疼的，可怜那些被挤压的小啰啰程序&#128516;&#128516;&#128516;，本以为是那些List，HashSet，Dic            <a href="https://www.cnblogs.com/huangxincheng/p/12839160.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-06 21:50
一线码农
<span class="post-view-count">阅读(3978)</span><text> </text>
<span class="post-comment-count">评论(39)</span><text> </text>
<span class="post-digg-count">推荐(37)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12839160" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/04.html">2020年5月4日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12827314.html">
    慎用ToLower和ToUpper，小心把你的系统给拖垮了
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：不知道何时开始，很多程序员喜欢用ToLower，ToUpper去实现忽略大小写模式的字符串相等性比较，有可能这个习惯是从别的语言引进的，大胆猜测下是JS，为了不引起争论，我指的JS是技师的意思~ 一：背景 1. 讲故事 在我们一个订单聚合系统中，每一笔订单都会标注来源，比如JD，Taobao，Eta            <a href="https://www.cnblogs.com/huangxincheng/p/12827314.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-04 17:24
一线码农
<span class="post-view-count">阅读(4226)</span><text> </text>
<span class="post-comment-count">评论(79)</span><text> </text>
<span class="post-digg-count">推荐(60)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12827314" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/05/02.html">2020年5月2日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12817486.html">
    面向接口编程，你考虑过性能吗？
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：大家在平时开发中大多都会遵循接口编程，这样就可以方便实现依赖注入也方便实现多态等各种小技巧，但这种是以牺牲性能为代价换取代码的灵活性，万物皆有阴阳，看你的应用场景进行取舍。 一：背景 1. 缘由 在项目的性能改造中，发现很多方法签名的返回值都是采用IEnumerable接口，比如下面这段代码: 2.            <a href="https://www.cnblogs.com/huangxincheng/p/12817486.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-02 11:40
一线码农
<span class="post-view-count">阅读(1888)</span><text> </text>
<span class="post-comment-count">评论(25)</span><text> </text>
<span class="post-digg-count">推荐(13)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12817486" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/04/30.html">2020年4月30日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12811291.html">
    从GC的SuppressFinalize方法带你深刻认识Finalize底层运行机制
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：如果你经常看开源项目的源码，你会发现很多Dispose方法中都有这么一句代码： ，看过一两次可能无所谓，看多了就来了兴趣，这篇就跟大家聊一聊。 一：背景 1. 在哪发现的 相信现在Mysql在.Net领域中铺的面越来越广了，C 对接MySql的MySql.Data类库的代码大家可以研究研究，几乎所有            <a href="https://www.cnblogs.com/huangxincheng/p/12811291.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-30 21:35
一线码农
<span class="post-view-count">阅读(983)</span><text> </text>
<span class="post-comment-count">评论(10)</span><text> </text>
<span class="post-digg-count">推荐(8)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12811291" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/04/29.html">2020年4月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12799736.html">
    非常简单的string驻留池，你对它真的了解吗
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：昨天看群里在讨论C 中的string驻留池，炒的火热，几轮下来理论一堆堆，但是在证据提供上都比较尴尬。虽然这东西很基础，但比较好的回答也不是那么容易，这篇我就以我能力范围之内跟大家分享一下 一：无处不在的池 开发这么多年，相信大家对‘池’ 这个概念都耳熟能详了，连接池，线程池，对象池，还有这里的驻留            <a href="https://www.cnblogs.com/huangxincheng/p/12799736.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-29 08:23
一线码农
<span class="post-view-count">阅读(528)</span><text> </text>
<span class="post-comment-count">评论(3)</span><text> </text>
<span class="post-digg-count">推荐(7)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12799736" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/huangxincheng/archive/2020/04/27.html">2020年4月27日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/huangxincheng/p/12784230.html">
    用long类型让我出了次生产事故，写代码还是要小心点
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：昨天发现线上试跑期的一个程序挂了，平时都跑的好好的，查了下日志是因为昨天运营跑了一家美妆top级淘品牌店，会员量近千万，一下子就把128G的内存给爆了，当时并行跑了二个任务，没辙先速写一段代码限流，后面再做进一步优化。 一： 背景 1. 背景介绍 因为是自己写的代码，所以我知道问题出现在哪里，如果大            <a href="https://www.cnblogs.com/huangxincheng/p/12784230.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-27 07:41
一线码农
<span class="post-view-count">阅读(2469)</span><text> </text>
<span class="post-comment-count">评论(17)</span><text> </text>
<span class="post-digg-count">推荐(19)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12784230" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/huangxincheng/default.html?page=2">
        下一页
    </a>

    </div>    
</div>








	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 一线码农
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>
